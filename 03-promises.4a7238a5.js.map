{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBAI3C,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAXgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EAEFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAbKN,SAASC,cAAc,QAyD/Ba,iBAAiB,UAAUC,IACnCA,EAAMC,iBAEN,MAAMC,EAAQC,OAAOnB,EAAWoB,OAC1BC,EAAOF,OAAOhB,EAAUiB,OACxBE,EAASH,OAAOf,EAAYgB,OAYlC,GAAID,OAAOD,GAAS,GAAKC,OAAOE,GAAQ,GAAKF,OAAOG,GAAU,EAC5DxB,EAAAyB,OAAOC,QACL,sEAEG,GAAuB,IAAnBL,OAAOG,GAChBxB,EAAAyB,OAAOC,QAAQ,6DAIf,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,IAC1BpB,EAAcoB,EAAGP,EAAQG,EAAOI,GAC7BC,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBT,EAAAyB,OAAOI,QAAQ,uBAAqBrB,EAAY,QAASC,MAAU,IAEpEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBT,EAAAyB,OAAOM,QAAQ,sBAAoBvB,EAAY,QAASC,MAAU,GAClE","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\n// const start = document.querySelector('button');\nconst inputForm = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\n//-------------------------------------------------------------------------------\n\n// const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     if (isSuccess) {\n//       resolve(\"Success! Value passed to resolve function\");\n//     } else {\n//       reject(\"Error! Error passed to reject function\");\n//     }\n//   }, 2000);\n// });\n\n//-------------------------------------------------------------------------------\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n// console.log(inputForm)\n\n//-------------------------------------------------------------------------------\n\n// inputForm.addEventListener('submit', event => {\n//   event.preventDefault();\n\n//   const delay = inputDelay.value;\n//   const step = inputStep.value;\n//   const amount = inputAmount.value;\n\n//   console.log(`delay` + delay, `step` + step, `amount` + amount);\n// }\n// )\n\n//-------------------------------------------------------------------------------\n\ninputForm.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delay = Number(inputDelay.value);\n  const step = Number(inputStep.value);\n  const amount = Number(inputAmount.value);\n\n  // if (Number(delay) === \"\" || Number(step) === \"\" || Number(amount) === \"\") {\n  //   Notify.warning(`Values can't be empty, please, fill in the fields!`);\n  // } else if (delay < 0 || step < 0 || amount < 0) {\n  //     Notify.warning(`Values can't be negative, please, correct fill in the fields!`);\n  //   } else {\n  //     Notify.success(`delay + ${delay}, step + ${step}, amount + ${amount}`);\n\n  //   }\n  // }\n\n  if (Number(delay) < 0 || Number(step) < 0 || Number(amount) < 0) {\n    Notify.warning(\n      `Values can't be negative, please, correct fill in the fields!`\n    );\n  } else if (Number(amount) === 0) {\n    Notify.warning(`Amount can't be zero, please, fill in correct value!`);\n  } else {\n    // Notify.success(`delay + ${delay}, step + ${step}, amount + ${amount}`);\n\n    for (let i = 0; i < amount; i++) {\n      createPromise(i, delay + step * i)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n        });\n    }\n  }\n});\n// Notify.success(`delay + ${delay}, step + ${step}, amount + ${amount}`);\n\n// for (let i=1; i<=amount; i++){\n\n// createPromise(i, delay + step*i)\n// .then(({ position, delay }) => {\n//   Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// })\n// .catch(({ position, delay }) => {\n//   Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n// });\n\n// }\n// }\n// )\n//   // createPromise(3, 1000)\n//   // .then(({ position, delay }) => {\n//   //   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   // })\n//   // .catch(({ position, delay }) => {\n//   //   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   // });\n// })\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$inputDelay","document","querySelector","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","Notify","warning","i","then","success","catch","failure"],"version":3,"file":"03-promises.4a7238a5.js.map"}